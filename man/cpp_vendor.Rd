% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vendor.R
\name{cpp_vendor}
\alias{cpp_vendor}
\title{Vendor the cpp11 and cpp11armadillo dependency}
\usage{
cpp_vendor(path = "./src/vendor")
}
\arguments{
\item{path}{The path to vendor the code into. The default is `./src/vendor`.}
}
\value{
The file path to the vendored code (invisibly).
}
\description{
Vendoring is the act of making your own copy of the 3rd party packages your
project is using. It is often used in the go language community.
}
\details{
This function vendors cpp11 and cpp11armadillo into your package by copying
the cpp11 and cpp11armadillo headers into the `src/vendor` folder and adding
'cpp11 version: XYZ' and 'cpp11armadillo version: XYZ' to the top of the
files, where XYZ is the version of cpp11 and cpp11armadillo currently
installed on your machine.

If you choose to vendor the headers you should _remove_ `LinkingTo:
cpp11, cpp11armadillo` from your DESCRIPTION. This is done automatically by
this function.

**Note**: vendoring places the responsibility of updating the code on
**you**. Bugfixes and new features in cpp11 and cpp11armadillo will not be
available for your code until you run `cpp_vendor()` again.
}
\examples{
# create a new directory
dir <- tempdir()
dir.create(dir)
cpp_vendor(dir)
}
